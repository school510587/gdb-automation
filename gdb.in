file main.elf
target remote :3333
set $osp = $sp
set $sp = $sp - 16
set logging on
b main.c:4
c
call RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_AFIO, ENABLE)
call RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE)
macro define FILL(type, field, value) ((type*)$osp)->field = value
macro define INIT_GPIO(pin, speed, mode) \
      FILL(GPIO_InitTypeDef, GPIO_Pin, pin), FILL(GPIO_InitTypeDef, GPIO_Speed, speed), \
      FILL(GPIO_InitTypeDef, GPIO_Mode, mode), GPIO_Init(GPIOA, $osp)
set INIT_GPIO(GPIO_Pin_3, 0, GPIO_Mode_IN_FLOATING)
set INIT_GPIO(GPIO_Pin_2, GPIO_Speed_50MHz, GPIO_Mode_AF_PP)
c
set FILL(USART_InitTypeDef, USART_BaudRate, 9600)
set FILL(USART_InitTypeDef, USART_WordLength, USART_WordLength_8b)
set FILL(USART_InitTypeDef, USART_StopBits, USART_StopBits_1)
set FILL(USART_InitTypeDef, USART_Parity, USART_Parity_No)
set FILL(USART_InitTypeDef, USART_HardwareFlowControl, USART_HardwareFlowControl_None)
set FILL(USART_InitTypeDef, USART_Mode, USART_Mode_Rx | USART_Mode_Tx)
call USART_Init(USART2, $osp)
call USART_Cmd(USART2, ENABLE)
echo Send H
call USART_SendData(USART2, 'H')
echo Send e
call USART_SendData(USART2, 'e')
echo Send l
call USART_SendData(USART2, 'l')
echo Send l
call USART_SendData(USART2, 'l')
echo Send o
call USART_SendData(USART2, 'o')
echo Send !
call USART_SendData(USART2, '!')
